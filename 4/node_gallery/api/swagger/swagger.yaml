swagger: "2.0"
info:
  version: "0.0.1"
  title: Web Gallery - API
  description: This is sample web gallery schema for exercise 4 of the Web Development subject.
  
host: localhost:10010
basePath: /

schemes:
  - http
  - https
  
consumes:
  - application/json
produces:
  - application/json
  
tags:
  - name: image
    description: Everything about images from gallery

  
paths:
  /images:
    x-swagger-router-controller: images
    get:
      tags:
        - image
      summary: Returns images.
      description: Returns all images from gallery.
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    get:
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  SesjaResponse:
    required:
      - Id
      - Token
      - Expire
    properties:
      Id:
        type: string
      Token:
        type: string
      Expire:
        type: string
        format: date-time
  User:
    type: object
    properties:
      id:
        type: integer
        readOnly: true
      email:
        type: string
        format: email
      password:
        type: string
        format: password
  Image:
    type: object
    properties:
      id:
        type: integer
        readOnly: true
      title:
        type: string
      description:
        type: string
      format:
        type: string
      height:
        type: integer
      width:
        type: integer
      size:
        type: integer
      dateUploaded:
        type: string
        format: date-time
  Images:
    type: array
    items:
      $ref: '#/definitions/Image'
  Folder:
    type: object
    properties:
      id:
        type: integer
        readOnly: true
      name:
        type: string
      images:
        type: array
        items:
          $ref: '#/definitions/Image'
  Presentation:
    type: array
    items:
      $ref: '#/definitions/Image'
  
  ImageResponseGet:
    $ref: '#/definitions/Image'
  ImagesResponseGet:
    $ref: '#/definitions/Images'
  FolderResponseGet:
    $ref: '#/definitions/Folder'
  PresentationResponseGet:
    $ref: '#/definitions/Presentation'
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
